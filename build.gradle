plugins {
    id "java"
    id "maven-publish"
    id "com.timgroup.jarmangit" version "1.1.113"
}

ext {
    description = 'Fittings for Logback to make it submit to external log rotation'
    githubPath = 'tim-group/RotatableAppender'
    url = "https://github.com/${githubPath}"
    buildNumber = System.getenv('BUILD_NUMBER')
}

group = 'com.timgroup'
if (buildNumber) version = "1.0.${buildNumber}"

tasks.withType(Jar).configureEach {
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "TIM Group Ltd"
        )
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "ch.qos.logback:logback-core:1.0.13"

    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.24.0"
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
    options.encoding = "UTF-8"
    options.incremental = true
    options.deprecation = true
    options.compilerArgs << "-parameters"
}

tasks.register("sourcesJar", Jar) {
    dependsOn("classes")
    classifier = 'sources'
    from sourceSets.main.allSource
}

tasks.register("javadocJar", Jar) {
    dependsOn("javadoc")
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.named("assemble").configure {
    dependsOn("sourcesJar")
    dependsOn("javadocJar")
}

publishing {
    repositories {
        if (project.hasProperty("repoUrl")) {
            maven {
                url "${project.repoUrl}/repositories/yd-release-candidates"
                credentials {
                    username = project.repoUsername
                    password = project.repoPassword
                }
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifactId project.ext.has('artifactId') ? project.ext.artifactId
                    : project == rootProject ? project.name
                    : rootProject.name + project.path.replace(':', '-')
            from components.java
            artifact(tasks.sourcesJar)
            artifact(tasks.javadocJar)
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = DELEGATE_FIRST
                    name project.ext.has('pomName') ? project.ext.pomName : project.name
                    description project.description
                    url project.ext.url
                    licenses {
                        license {
                            name 'The BSD 2-Clause License'
                            url 'http://opensource.org/licenses/BSD-2-Clause'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'steve.haslam@timgroup.com'
                            name 'Steve Haslam'
                            email 'steve.haslam@timgroup.com'
                        }
                    }
                }
            }
        }
    }
}
